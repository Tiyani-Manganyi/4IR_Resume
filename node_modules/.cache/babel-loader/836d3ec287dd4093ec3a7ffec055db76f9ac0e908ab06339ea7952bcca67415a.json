{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const dataStoreSlice = createSlice({\n  name: 'dataStore',\n  initialState: {\n    personalInfo: {\n      firstName: \"\",\n      lastName: \"\",\n      Email: \"\",\n      Mobile: \"\",\n      Address1: \"\",\n      Address2: \"\",\n      City: \"\",\n      State: \"\",\n      Pin: \"\",\n      Objective: \"\"\n    },\n    workEx: [{\n      title: \"\",\n      orgName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n      jobDescription: \"\"\n    }],\n    education: [{\n      Type: \"Graduation\",\n      University: \"\",\n      Degree: \"\",\n      Start: \"\",\n      End: \"\"\n    }],\n    skills: [{\n      skillName: \"\"\n    }],\n    selectedTemplate: \"\",\n    imageFile: null,\n    errorMessages: {},\n    showErrorMessages: false\n  },\n  reducers: {\n    updatePersonalInfo: (state, action) => {\n      //this function updates the targeted key of the personalInfo element of dataStore //\n      state.personalInfo[action.payload.key] = action.payload.value;\n    },\n    updateWorkEx: (state, action) => {\n      //this function updates the targeted key of the workEx element of dataStore //\n      state.workEx[action.payload.index][action.payload.key] = action.payload.value;\n    },\n    updateEducation: (state, action) => {\n      //this function updates the targeted key of the education element of dataStore //\n      state.education[action.payload.index][action.payload.key] = action.payload.value;\n    },\n    updateKeySkills: (state, action) => {\n      //this function updates the targeted key of the keySkills element of dataStore //\n      state.skills[action.payload.index][action.payload.key] = action.payload.value;\n    },\n    updateState: (state, action) => {\n      //this function can be called to update any targeted element of dataStore //\n      state[action.payload.key] = action.payload.value;\n    },\n    updateErrorMessages: (state, action) => {\n      //this function updates errorMessages element of dataStore //\n      let key = action.payload.key;\n      if (action.payload.index) {\n        key += '_' + action.payload.index;\n      }\n      state.errorMessages[key] = action.payload.value;\n    },\n    addArrayElement: (state, action) => {\n      //this function is used to push a blank object in the array of elements(workEx,education& keySkills)\n      //when the user clicks on the Add-new button to add more related details//\n      state[action.payload.key].push(action.payload.element);\n    },\n    removeArrayElement: (state, action) => {\n      //this function deletes the latest saved details in the array of elements(workEx,education& keySkills), when the user clicks on the remove button// \n      state[action.payload.key].pop();\n    }\n  }\n});\nexport const {\n  updatePersonalInfo,\n  updateWorkEx,\n  updateEducation,\n  updateKeySkills,\n  updateErrorMessages,\n  updateState,\n  addArrayElement,\n  removeArrayElement\n} = dataStoreSlice.actions;\nexport default dataStoreSlice.reducer;","map":{"version":3,"names":["createSlice","dataStoreSlice","name","initialState","personalInfo","firstName","lastName","Email","Mobile","Address1","Address2","City","State","Pin","Objective","workEx","title","orgName","startYear","endYear","jobDescription","education","Type","University","Degree","Start","End","skills","skillName","selectedTemplate","imageFile","errorMessages","showErrorMessages","reducers","updatePersonalInfo","state","action","payload","key","value","updateWorkEx","index","updateEducation","updateKeySkills","updateState","updateErrorMessages","addArrayElement","push","element","removeArrayElement","pop","actions","reducer"],"sources":["D:/Downloads/Resume-Builder-master/Resume-Builder-master/src/ReduxManager/dataStoreSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const dataStoreSlice = createSlice({\n  name: 'dataStore',\n  initialState: {\n        personalInfo:{\n                firstName:\"\",\n                lastName:\"\",\n                Email:\"\",\n                Mobile:\"\",\n                Address1:\"\",\n                Address2:\"\",\n                City:\"\",\n                State:\"\",\n                Pin:\"\",\n                Objective:\"\"\n        },\n        workEx: [\n                {\n                    title:\"\",\n                    orgName:\"\",\n                    startYear:\"\",\n                    endYear:\"\",\n                    jobDescription:\"\",\n                }\n        ],\n        education:[\n          {\n                Type:\"Graduation\",\n                University:\"\",\n                Degree:\"\",\n                Start:\"\",\n                End:\"\"\n        }],\n        skills:[{skillName:\"\"}] ,\n        selectedTemplate:\"\",\n        imageFile:null,\n        errorMessages:{},\n        showErrorMessages:false,\n  },\n\n\n  reducers: {\n    \n    updatePersonalInfo: (state,action) => { \n      //this function updates the targeted key of the personalInfo element of dataStore //\n        state.personalInfo[action.payload.key] =action.payload.value\n    },\n\n    updateWorkEx: (state,action) =>{\n      //this function updates the targeted key of the workEx element of dataStore //\n        state.workEx[action.payload.index][action.payload.key] = action.payload.value\n    },\n    updateEducation: (state,action) =>{\n      //this function updates the targeted key of the education element of dataStore //\n      state.education[action.payload.index][action.payload.key] = action.payload.value\n    },\n    updateKeySkills: (state,action) =>{\n      //this function updates the targeted key of the keySkills element of dataStore //\n      state.skills[action.payload.index][action.payload.key] = action.payload.value\n    },\n    updateState: (state,action) =>{\n      //this function can be called to update any targeted element of dataStore //\n      state[action.payload.key]=action.payload.value\n    },\n    updateErrorMessages: (state,action) =>{\n      //this function updates errorMessages element of dataStore //\n      let key = action.payload.key\n      if(action.payload.index){\n        key+='_'+action.payload.index\n      }\n      state.errorMessages[key]=action.payload.value\n    },\n    addArrayElement:(state,action) =>{\n      //this function is used to push a blank object in the array of elements(workEx,education& keySkills)\n      //when the user clicks on the Add-new button to add more related details//\n      state[action.payload.key].push(action.payload.element)\n    },\n    removeArrayElement:(state,action) =>{\n      //this function deletes the latest saved details in the array of elements(workEx,education& keySkills), when the user clicks on the remove button// \n      state[action.payload.key].pop()\n    },\n\n  }\n})\n\nexport const { updatePersonalInfo, updateWorkEx,updateEducation,updateKeySkills,\n  updateErrorMessages, updateState,addArrayElement,removeArrayElement } = dataStoreSlice.actions\n\nexport default dataStoreSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}